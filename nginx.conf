user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    upstream node {
        server node:8080 weight=1 fail_timeout=66s;
    }

    #gzip  on;

    proxy_cache_path /tmp/nginx_proxy_cache_myapp levels=1:2 keys_zone=myapp:64m max_size=128m inactive=10080m use_temp_path=off;
    # caching all nginx-mime-types except json
    # todo: not good
    map $sent_http_content_type $expires {
      default 10080m;
    }

    server {
      listen 80; # todo? http2
      listen [::]:80;
      server_name  localhost;

      gzip on;
      gzip_comp_level 5;
      gzip_min_length 256;
      gzip_proxied any;
      gzip_vary on;
      gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        # text/html is always compressed by gzip module
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;
      client_max_body_size 10m;
      add_header X-Frame-Options SAMEORIGIN always;
      add_header X-Content-Type-Options nosniff always;
      add_header X-XSS-Protection "1" always;
      add_header Referrer-Policy "no-referrer-when-downgrade" always;
      add_header X-UA-Compatible "IE=Edge" always;
      add_header X-Cache-Status $upstream_cache_status always;

      #charset koi8-r;
      #access_log  /var/log/nginx/host.access.log  main;

      #location / {
      #    root   /usr/share/nginx/html;
      #    index  index.html index.htm;
      #}

      #error_page  404              /404.html;

      # redirect server error pages to the static page /50x.html
      #
      #error_page   500 502 503 504  /50x.html;
      #location = /50x.html {
      #    root   /usr/share/nginx/html;
      #}

      location / {
        expires $expires;
        proxy_cache myapp;
        proxy_cache_use_stale  error timeout invalid_header updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        proxy_cache_methods GET HEAD;
        proxy_cache_valid any 10080m;
        proxy_ignore_headers "Cache-Control"; #ignore nodes Cache-Control
        proxy_pass http://node/;
        set_real_ip_from reverseproxy; # Ip/network of the reverse proxy (or ip received into REMOTE_ADDR)
        real_ip_header X-Forwarded-For;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-REAL-IP-REMOTE $realip_remote_addr;
        proxy_set_header x-nginx-proxy true;
        proxy_set_header Host $http_host;
        proxy_ssl_session_reuse off;
        proxy_redirect off;
        #proxy_intercept_errors on;
        proxy_cache_bypass $http_upgrade $arg_nocache; # disable cache via ?nocache=true
    }
      # proxy the PHP scripts to Apache listening on 127.0.0.1:80
      #
      #location ~ \.php$ {
      #    proxy_pass   http://127.0.0.1;
      #}

      # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
      #
      #location ~ \.php$ {
      #    root           html;
      #    fastcgi_pass   127.0.0.1:9000;
      #    fastcgi_index  index.php;
      #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
      #    include        fastcgi_params;
      #}

      # deny access to .htaccess files, if Apache's document root
      # concurs with nginx's one
      #
      #location ~ /\.ht {
      #    deny  all;
      #}
  }
}
